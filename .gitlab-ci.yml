workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

stages:
  - build
  - lint
  - test
  - deploy

default:
  interruptible: true

### Base images
.node:
  image: node:20-alpine
  cache:
    - key:
        files:
          - package-lock.json
        prefix: node
      paths:
        - node_modules/
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

.php:
  image: php:8.3-alpine
  cache:
    - key:
        files:
          - composer-lock.json
        prefix: composer
      paths:
        - vendor/
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

.deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --update openssh
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh "${SSH_USER}@${SSH_HOSTNAME}" bash -ex <<EOT
      cd $SSH_GIT_DIR
      git fetch $CI_REPOSITORY_URL $CI_COMMIT_SHA
      git checkout FETCH_HEAD
      scripts/deploy.sh $BUILD_PREFIX
      EOT
  resource_group: $SSH_HOSTNAME
  interruptible: false
  when: manual

### Build stage
composer:
  extends: .php
  stage: build
  before_script:
    - EXPECTED_CHECKSUM="$(php -r 'copy("https://composer.github.io/installer.sig", "php://stdout");')"
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
    - test "$EXPECTED_CHECKSUM" == "$ACTUAL_CHECKSUM"
    - php composer-setup.php
  script:
    - php composer.phar install --ignore-platform-reqs

node:
  extends: .node
  stage: build
  before_script:
    - apk add --no-cache git
  script:
    - npm ci

### Lint stage
commitlint:
  extends: .node
  stage: lint
  script:
    - npx --no -- commitlint --from $CI_MERGE_REQUEST_DIFF_BASE_SHA

eslint:
  extends: .node
  stage: lint
  script:
    - npx --no -- eslint resources/js/**/*.{js,ts,vue}

gitleaks:
  stage: lint
  image:
    name: ghcr.io/gitleaks/gitleaks:latest
    entrypoint: [""]
  script: gitleaks git --platform=gitlab --log-opts=$CI_MERGE_REQUEST_DIFF_BASE_SHA..
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

phpcs:
  extends: .php
  stage: lint
  script:
    - vendor/bin/phpcs

prettier:
  extends: .node
  stage: lint
  script:
    - npx --no -- prettier --list-different resources/js resources/sass

rector:
  extends: .php
  stage: lint
  before_script:
    - apk add --no-cache git
  script:
    - vendor/bin/rector process
    - git diff --exit-code

stylelint:
  extends: .node
  stage: lint
  script:
    - npx --no -- stylelint resources/{js,sass}/**/*.{css,sass,vue}

### Test stage
dusk:
  stage: test
  image: docker:26-cli
  services:
    - docker:26-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$DOCKER_REGISTRY_PASS" | docker login --username "$DOCKER_REGISTRY_USER" --password-stdin
    - cp .env.dusk.compose .env
  script:
    - docker compose --file compose.testing.yaml up --abort-on-container-exit --exit-code-from dusk --attach dusk
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  resource_group: project-pipeline

### Deploy stage
deploy-staging:
  extends: .deploy
  environment:
    name: staging
    url: https://roomz.onit-ub.tu-berlin.de

deploy-demo:
  extends: .deploy
  environment:
    name: demo
    url: https://demo.ub.tu-berlin.de/bibroomz
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  manual_confirmation: Deploy to demo server?
